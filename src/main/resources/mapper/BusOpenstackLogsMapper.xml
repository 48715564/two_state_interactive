<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cn.domain.mapper.BusOpenstackLogsMapper">
  <resultMap id="BaseResultMap" type="com.cn.domain.entity.BusOpenstackLogs">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="hypervisor_count" jdbcType="INTEGER" property="hypervisorCount" />
    <result column="running_VM_count" jdbcType="INTEGER" property="runningVmCount" />
    <result column="disk_available_least" jdbcType="INTEGER" property="diskAvailableLeast" />
    <result column="free_disk" jdbcType="INTEGER" property="freeDisk" />
    <result column="local" jdbcType="INTEGER" property="local" />
    <result column="local_used" jdbcType="INTEGER" property="localUsed" />
    <result column="free_ram" jdbcType="INTEGER" property="freeRam" />
    <result column="memory" jdbcType="INTEGER" property="memory" />
    <result column="memory_used" jdbcType="INTEGER" property="memoryUsed" />
    <result column="virtual_CPU" jdbcType="INTEGER" property="virtualCpu" />
    <result column="virtual_used_CPU" jdbcType="INTEGER" property="virtualUsedCpu" />
    <result column="create_tm" jdbcType="TIMESTAMP" property="createTm" />
    <result column="update_tm" jdbcType="TIMESTAMP" property="updateTm" />
    <result column="network_count" jdbcType="INTEGER" property="networkCount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, hypervisor_count, running_VM_count, disk_available_least, free_disk, local, local_used, 
    free_ram, memory, memory_used, virtual_CPU, virtual_used_CPU, create_tm, update_tm, 
    network_count
  </sql>
  <select id="selectByExample" parameterType="com.cn.domain.entity.BusOpenstackLogsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bus_openstack_logs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bus_openstack_logs
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from bus_openstack_logs
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cn.domain.entity.BusOpenstackLogsExample">
    delete from bus_openstack_logs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cn.domain.entity.BusOpenstackLogs">
    insert into bus_openstack_logs (id, hypervisor_count, running_VM_count, 
      disk_available_least, free_disk, local, 
      local_used, free_ram, memory, 
      memory_used, virtual_CPU, virtual_used_CPU, 
      create_tm, update_tm, network_count
      )
    values (#{id,jdbcType=VARCHAR}, #{hypervisorCount,jdbcType=INTEGER}, #{runningVmCount,jdbcType=INTEGER}, 
      #{diskAvailableLeast,jdbcType=INTEGER}, #{freeDisk,jdbcType=INTEGER}, #{local,jdbcType=INTEGER}, 
      #{localUsed,jdbcType=INTEGER}, #{freeRam,jdbcType=INTEGER}, #{memory,jdbcType=INTEGER}, 
      #{memoryUsed,jdbcType=INTEGER}, #{virtualCpu,jdbcType=INTEGER}, #{virtualUsedCpu,jdbcType=INTEGER}, 
      #{createTm,jdbcType=TIMESTAMP}, #{updateTm,jdbcType=TIMESTAMP}, #{networkCount,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cn.domain.entity.BusOpenstackLogs">
    insert into bus_openstack_logs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="hypervisorCount != null">
        hypervisor_count,
      </if>
      <if test="runningVmCount != null">
        running_VM_count,
      </if>
      <if test="diskAvailableLeast != null">
        disk_available_least,
      </if>
      <if test="freeDisk != null">
        free_disk,
      </if>
      <if test="local != null">
        local,
      </if>
      <if test="localUsed != null">
        local_used,
      </if>
      <if test="freeRam != null">
        free_ram,
      </if>
      <if test="memory != null">
        memory,
      </if>
      <if test="memoryUsed != null">
        memory_used,
      </if>
      <if test="virtualCpu != null">
        virtual_CPU,
      </if>
      <if test="virtualUsedCpu != null">
        virtual_used_CPU,
      </if>
      <if test="createTm != null">
        create_tm,
      </if>
      <if test="updateTm != null">
        update_tm,
      </if>
      <if test="networkCount != null">
        network_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="hypervisorCount != null">
        #{hypervisorCount,jdbcType=INTEGER},
      </if>
      <if test="runningVmCount != null">
        #{runningVmCount,jdbcType=INTEGER},
      </if>
      <if test="diskAvailableLeast != null">
        #{diskAvailableLeast,jdbcType=INTEGER},
      </if>
      <if test="freeDisk != null">
        #{freeDisk,jdbcType=INTEGER},
      </if>
      <if test="local != null">
        #{local,jdbcType=INTEGER},
      </if>
      <if test="localUsed != null">
        #{localUsed,jdbcType=INTEGER},
      </if>
      <if test="freeRam != null">
        #{freeRam,jdbcType=INTEGER},
      </if>
      <if test="memory != null">
        #{memory,jdbcType=INTEGER},
      </if>
      <if test="memoryUsed != null">
        #{memoryUsed,jdbcType=INTEGER},
      </if>
      <if test="virtualCpu != null">
        #{virtualCpu,jdbcType=INTEGER},
      </if>
      <if test="virtualUsedCpu != null">
        #{virtualUsedCpu,jdbcType=INTEGER},
      </if>
      <if test="createTm != null">
        #{createTm,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTm != null">
        #{updateTm,jdbcType=TIMESTAMP},
      </if>
      <if test="networkCount != null">
        #{networkCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cn.domain.entity.BusOpenstackLogsExample" resultType="java.lang.Long">
    select count(*) from bus_openstack_logs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bus_openstack_logs
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.hypervisorCount != null">
        hypervisor_count = #{record.hypervisorCount,jdbcType=INTEGER},
      </if>
      <if test="record.runningVmCount != null">
        running_VM_count = #{record.runningVmCount,jdbcType=INTEGER},
      </if>
      <if test="record.diskAvailableLeast != null">
        disk_available_least = #{record.diskAvailableLeast,jdbcType=INTEGER},
      </if>
      <if test="record.freeDisk != null">
        free_disk = #{record.freeDisk,jdbcType=INTEGER},
      </if>
      <if test="record.local != null">
        local = #{record.local,jdbcType=INTEGER},
      </if>
      <if test="record.localUsed != null">
        local_used = #{record.localUsed,jdbcType=INTEGER},
      </if>
      <if test="record.freeRam != null">
        free_ram = #{record.freeRam,jdbcType=INTEGER},
      </if>
      <if test="record.memory != null">
        memory = #{record.memory,jdbcType=INTEGER},
      </if>
      <if test="record.memoryUsed != null">
        memory_used = #{record.memoryUsed,jdbcType=INTEGER},
      </if>
      <if test="record.virtualCpu != null">
        virtual_CPU = #{record.virtualCpu,jdbcType=INTEGER},
      </if>
      <if test="record.virtualUsedCpu != null">
        virtual_used_CPU = #{record.virtualUsedCpu,jdbcType=INTEGER},
      </if>
      <if test="record.createTm != null">
        create_tm = #{record.createTm,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTm != null">
        update_tm = #{record.updateTm,jdbcType=TIMESTAMP},
      </if>
      <if test="record.networkCount != null">
        network_count = #{record.networkCount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bus_openstack_logs
    set id = #{record.id,jdbcType=VARCHAR},
      hypervisor_count = #{record.hypervisorCount,jdbcType=INTEGER},
      running_VM_count = #{record.runningVmCount,jdbcType=INTEGER},
      disk_available_least = #{record.diskAvailableLeast,jdbcType=INTEGER},
      free_disk = #{record.freeDisk,jdbcType=INTEGER},
      local = #{record.local,jdbcType=INTEGER},
      local_used = #{record.localUsed,jdbcType=INTEGER},
      free_ram = #{record.freeRam,jdbcType=INTEGER},
      memory = #{record.memory,jdbcType=INTEGER},
      memory_used = #{record.memoryUsed,jdbcType=INTEGER},
      virtual_CPU = #{record.virtualCpu,jdbcType=INTEGER},
      virtual_used_CPU = #{record.virtualUsedCpu,jdbcType=INTEGER},
      create_tm = #{record.createTm,jdbcType=TIMESTAMP},
      update_tm = #{record.updateTm,jdbcType=TIMESTAMP},
      network_count = #{record.networkCount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.domain.entity.BusOpenstackLogs">
    update bus_openstack_logs
    <set>
      <if test="hypervisorCount != null">
        hypervisor_count = #{hypervisorCount,jdbcType=INTEGER},
      </if>
      <if test="runningVmCount != null">
        running_VM_count = #{runningVmCount,jdbcType=INTEGER},
      </if>
      <if test="diskAvailableLeast != null">
        disk_available_least = #{diskAvailableLeast,jdbcType=INTEGER},
      </if>
      <if test="freeDisk != null">
        free_disk = #{freeDisk,jdbcType=INTEGER},
      </if>
      <if test="local != null">
        local = #{local,jdbcType=INTEGER},
      </if>
      <if test="localUsed != null">
        local_used = #{localUsed,jdbcType=INTEGER},
      </if>
      <if test="freeRam != null">
        free_ram = #{freeRam,jdbcType=INTEGER},
      </if>
      <if test="memory != null">
        memory = #{memory,jdbcType=INTEGER},
      </if>
      <if test="memoryUsed != null">
        memory_used = #{memoryUsed,jdbcType=INTEGER},
      </if>
      <if test="virtualCpu != null">
        virtual_CPU = #{virtualCpu,jdbcType=INTEGER},
      </if>
      <if test="virtualUsedCpu != null">
        virtual_used_CPU = #{virtualUsedCpu,jdbcType=INTEGER},
      </if>
      <if test="createTm != null">
        create_tm = #{createTm,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTm != null">
        update_tm = #{updateTm,jdbcType=TIMESTAMP},
      </if>
      <if test="networkCount != null">
        network_count = #{networkCount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.domain.entity.BusOpenstackLogs">
    update bus_openstack_logs
    set hypervisor_count = #{hypervisorCount,jdbcType=INTEGER},
      running_VM_count = #{runningVmCount,jdbcType=INTEGER},
      disk_available_least = #{diskAvailableLeast,jdbcType=INTEGER},
      free_disk = #{freeDisk,jdbcType=INTEGER},
      local = #{local,jdbcType=INTEGER},
      local_used = #{localUsed,jdbcType=INTEGER},
      free_ram = #{freeRam,jdbcType=INTEGER},
      memory = #{memory,jdbcType=INTEGER},
      memory_used = #{memoryUsed,jdbcType=INTEGER},
      virtual_CPU = #{virtualCpu,jdbcType=INTEGER},
      virtual_used_CPU = #{virtualUsedCpu,jdbcType=INTEGER},
      create_tm = #{createTm,jdbcType=TIMESTAMP},
      update_tm = #{updateTm,jdbcType=TIMESTAMP},
      network_count = #{networkCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>